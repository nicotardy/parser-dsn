#DSNstructures-PU.hibernate.show_sql=true
#DSNstructures-PU.hibernate.format_sql=true
#DSNstructures-PU.hibernate.use_sql_comments=true

DSNstructures-PU.hibernate.hbm2ddl.auto=update
DSNstructures-PU.hibernate.archive.autodetection=hbm
DSNstructures-PU.hibernate.connection.autocommit=false
DSNstructures-PU.hibernate.bytecode.use_reflection_optimizer=false

#hibernate.ejb.cfgfile=hibernate.cfg.xml
# Disable second-level cache
DSNstructures-PU.cache.provider_class=org.hibernate.cache.NoCacheProvider

DSNstructures-PU.hibernate.connection.driver_class=org.hsqldb.jdbcDriver
DSNstructures-PU.hibernate.dialect=org.hibernate.dialect.HSQLDialect

DSNstructures-PU.hibernate.connection.url=jdbc:hsqldb:file:/home/nta/views/git/DSN/parser-dsn/src/main/resources/HSQLDB/DB
DSNstructures-PU.hibernate.connection.username=sa







#DSNstock-PU.hibernate.show_sql=true
#DSNstock-PU.hibernate.format_sql=true
#DSNstock-PU.hibernate.use_sql_comments=true

DSNversion-PU.hibernate.hbm2ddl.auto=update
DSNversion-PU.hibernate.archive.autodetection=hbm
DSNversion-PU.hibernate.connection.autocommit=false
DSNversion-PU.hibernate.bytecode.use_reflection_optimizer=false

#hibernate.ejb.cfgfile=hibernate.cfg.xml
# Disable second-level cache
DSNversion-PU.cache.provider_class=org.hibernate.cache.NoCacheProvider

DSNversion-PU.hibernate.connection.driver_class=com.mysql.jdbc.Driver
DSNversion-PU.hibernate.dialect=fr.hsh.dsn.orm.hibernate.dialect.CsntMySQL5InnoDBDialect

#DSNversion-PU.hibernate.default_schema=envers_console_eclipse
#DSNversion-PU.hibernate.connection.url=jdbc:mysql://localhost:3306/envers_console_eclipse
#DSNversion-PU.hibernate.connection.username=root
#DSNversion-PU.hibernate.connection.password=
DSNversion-PU.hibernate.default_schema=DSNversion
#DSNversion-PU.hibernate.connection.url=jdbc:mysql://10.255.134.77:3306/DSNversion
#DSNversion-PU.hibernate.connection.url=jdbc:mysql://10.255.135.221:3306/DSNversion
DSNversion-PU.hibernate.connection.url=jdbc:mysql://10.255.134.128:3306/DSNversion
DSNversion-PU.hibernate.connection.username=dsn_user
DSNversion-PU.hibernate.connection.password=dsn_user

DSNversion-PU.hibernate.generate_statistics=true

# Isolation level:
# Mapped to java.sql.Connection TRANSACTION levels
# read uncommited
#hibernate.connection.isolation=1
# read commited
DSNversion-PU.hibernate.connection.isolation=2
# repeatable reads
#hibernate.connection.isolation=4
# serializable
#hibernate.connection.isolation=8

#javax.persistence.lock.timeout=2

DSNstock-PU.hibernate.hbm2ddl.auto=update
DSNstock-PU.hibernate.archive.autodetection=hbm
DSNstock-PU.hibernate.connection.autocommit=false
DSNstock-PU.hibernate.bytecode.use_reflection_optimizer=false
DSNstock-PU.cache.provider_class=org.hibernate.cache.NoCacheProvider
DSNstock-PU.hibernate.connection.driver_class=com.mysql.jdbc.Driver
DSNstock-PU.hibernate.dialect=fr.hsh.dsn.orm.hibernate.dialect.CsntMySQL5InnoDBDialect
DSNstock-PU.hibernate.default_schema=DSNstock
#DSNstock-PU.hibernate.connection.url=jdbc:mysql://localhost:3306/DSNstock
#DSNstock-PU.hibernate.connection.username=root
#DSNstock-PU.hibernate.connection.password=
#DSNstock-PU.hibernate.connection.url=jdbc:mysql://10.255.134.77:3306/DSNstock
#DSNstock-PU.hibernate.connection.url=jdbc:mysql://10.255.135.221:3306/DSNstock
DSNstock-PU.hibernate.connection.url=jdbc:mysql://10.255.134.128:3306/DSNstock
DSNstock-PU.hibernate.connection.username=dsn_user
DSNstock-PU.hibernate.connection.password=dsn_user
DSNstock-PU.hibernate.generate_statistics=true
DSNstock-PU.hibernate.connection.isolation=2
DSNstock-PU.hibernate.id.new_generator_mappings=true

# http://abramsm.wordpress.com/2008/04/23/hibernate-batch-processing-why-you-may-not-be-using-it-even-if-you-think-you-are/
# http://docs.jboss.org/hibernate/orm/4.1/devguide/en-US/html/ch04.html
DSNstock-PU.hibernate.jdbc.batch_size=5

# Hibernate looks at each SQL statement and checks to see if it is the same statement as the previously executed statement. If they are and if it hasn't reached the batch_size it will batch those two statements together using JDBC2 batch. However, if your statements look like the example above, hibernate will see alternating insert statements and will flush an individual insert statement for each record processed. So 1 million new customers would equal a total of 2 million insert statements in this case. This is extremely bad for performance.
# The solution is very simple. Just add the following two lines to your hibernate configuration.
DSNstock-PU.hibernate.order_inserts=true
DSNstock-PU.hibernate.order_updates=true

DSNstock-PU.hibernate.jdbc.batch_versioned_data=true